{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifFridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","noValidate","autoComplete","TextField","id","type","value","onChange","target","variant","label","fullWidth","protoTypes","PropTypes","func","isRequired","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","item","title","images","downsized_medium","GifFridItem","Grid","xs","md","Card","CardActionArea","CardMedia","component","alt","height","src","CardContent","Typography","gutterBottom","CardActions","Button","size","color","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifts","CircularProgress","container","spacing","gif","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","GiftExpertApp","classes","categories","AppBar","position","Toolbar","className","categorie","ReactDOM","render","document","getElementById"],"mappings":"sOAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACtCC,EADsC,KAC1BC,EAD0B,KAe7C,OACG,gCACG,6BAAKD,IACL,sBAAME,SAXS,SAACC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAEhCR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMmBO,YAAU,EAACC,aAAa,MAAtD,SACG,cAACC,EAAA,EAAD,CACGC,GAAG,iBACHC,KAAK,OACLC,MAAOb,EACPc,SApBc,SAACX,GACxBF,EAAcE,EAAEY,OAAOF,QAoBdG,QAAQ,SACRC,MAAM,YACNC,WAAS,UAOxBrB,EAAYsB,WAAa,CACtBrB,cAAesB,IAAUC,KAAKC,Y,sDCrCpBC,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAS,IAAD,EAC3B,MAAO,CACJvB,GAAIuB,EAAKvB,GACTwB,MAAK,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAMC,MACbT,IAAG,UAAEQ,EAAKE,cAAP,aAAE,EAAaC,iBAAiBX,QATpB,kBAadM,GAbc,4CAAH,sD,8DCERM,EAAc,SAAC,GAAkB,IAAjBZ,EAAgB,EAAhBA,IAAKS,EAAW,EAAXA,MAC/B,OACG,cAACI,EAAA,EAAD,CAAML,MAAI,EAACM,GAAI,GAAIC,GAAI,EAAvB,SACG,eAACC,EAAA,EAAD,WACG,eAACC,EAAA,EAAD,WACG,cAACC,EAAA,EAAD,CACGC,UAAU,MACVC,IAAI,wBACJC,OAAO,MACPC,IAAKtB,EACLS,MAAM,0BAET,cAACc,EAAA,EAAD,UACG,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACnC,QAAQ,KAAK6B,UAAU,KAAhD,SACIV,SAIV,cAACiB,EAAA,EAAD,UACG,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,MAAM,UAA3B,2BCjBFC,EAAU,SAAC,GAAgB,IAAfhC,EAAc,EAAdA,SAAc,ECFV,SAACA,GAAc,IAAD,EACdzB,mBAAS,CAChCgC,KAAM,GACN0B,SAAS,IAH4B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACPrC,EAASC,GAAUqC,MAAK,SAAA9B,GACrB+B,YAAW,WACRH,EAAS,CACN5B,KAAMA,EACN0B,SAAS,MAEZ,UAEN,CAACjC,IAEGkC,EDdiBK,CAAcvC,GAA/BO,EAD6B,EAC7BA,KAAM0B,EADuB,EACvBA,QAEb,OACG,gCACG,6BAAKjC,IACJiC,GAAW,cAACO,EAAA,EAAD,IACZ,cAACzB,EAAA,EAAD,CAAM0B,WAAS,EAACC,QAAS,EAAzB,SAEMnC,EAAKE,KAAI,SAAAkC,GAAG,OACT,cAAC,EAAD,eAA8BA,GAAZA,EAAIxD,a,2BELlCyD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACtCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMJ,QAAQ,IAE7B/B,MAAO,CACLqC,SAAU,OAIFG,EAAgB,WAC1B,IAAMC,EAAUR,IADgB,EAEIrE,mBAAS,CAAC,kBAFd,mBAEzB8E,EAFyB,KAEb/E,EAFa,KAQhC,OACG,gCACG,cAACgF,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACG,eAACC,EAAA,EAAD,WACG,cAAC9B,EAAA,EAAD,CAAYlC,QAAQ,KAAKiE,UAAWL,EAAQzC,MAA5C,6BAGA,cAACkB,EAAA,EAAD,CAAQE,MAAM,UAAd,wBAIN,cAAC,EAAD,CAAazD,cAAeA,IAGzB+E,EAAW5C,KAAI,SAAAiD,GAAS,OAAI,cAAC,EAAD,CAAyB1D,SAAU0D,GAArBA,UCvCtDC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a9101d9c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   const handleInputChange = (e) => {\r\n      setInputValue(e.target.value);\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (inputValue.trim().length <= 2) return;\r\n\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <h1>{inputValue}</h1>\r\n         <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n            <TextField \r\n               id=\"outlined-basic\"\r\n               type=\"text\" \r\n               value={inputValue}\r\n               onChange={handleInputChange}\r\n               variant=\"filled\"\r\n               label=\"Categoria\"\r\n               fullWidth\r\n            />\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifts = async (category) => {\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=7MuUbIPrpOd8vevcJzs5CVpj4LJ3Lw4k`;\r\n   const resp = await fetch(url);\r\n   const {data} = await resp.json();\r\n\r\n   const gifs = data.map(item => {\r\n      return {\r\n         id: item.id,\r\n         title: item?.title,\r\n         url: item.images?.downsized_medium.url\r\n      }\r\n   })\r\n\r\n   return gifs;\r\n}","import React from 'react';\r\nimport { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, Typography } from '@material-ui/core';\r\n\r\nexport const GifFridItem = ({url, title}) => {\r\n   return (\r\n      <Grid item xs={12} md={3}>\r\n         <Card>\r\n            <CardActionArea>\r\n               <CardMedia\r\n                  component=\"img\"\r\n                  alt=\"Contemplative Reptile\"\r\n                  height=\"140\"\r\n                  src={url}\r\n                  title=\"Contemplative Reptile\"\r\n               />\r\n               <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                     {title}\r\n                  </Typography>\r\n               </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n               <Button size=\"small\" color=\"primary\">\r\n                  Share\r\n               </Button>\r\n            </CardActions>\r\n         </Card>\r\n      </Grid>\r\n   )\r\n}","import { CircularProgress, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\nimport { GifFridItem } from './GifFridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n   const {data, loading} = useFetchGifts(category);\r\n\r\n   return (\r\n      <div>\r\n         <h3>{category}</h3>\r\n         {loading && <CircularProgress />}\r\n         <Grid container spacing={2}>\r\n            {\r\n               data.map(gif => (\r\n                  <GifFridItem key={gif.id} {...gif} />\r\n               ))\r\n            }\r\n         </Grid>\r\n      </div>\r\n   )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from '../helpers/getGifts';\r\n\r\nexport const useFetchGifts = (category) => {\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true\r\n   });\r\n\r\n   useEffect(() => {\r\n      getGifts(category).then(data => {\r\n         setTimeout(() => {\r\n            setState({\r\n               data: data,\r\n               loading: false\r\n            })\r\n         }, 2000)\r\n      });\r\n   }, [category])\r\n\r\n   return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n     flexGrow: 1,\r\n   },\r\n   menuButton: {\r\n     marginRight: theme.spacing(2),\r\n   },\r\n   title: {\r\n     flexGrow: 1,\r\n   },\r\n }));\r\n\r\nexport const GiftExpertApp = () => {\r\n   const classes = useStyles();\r\n   const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n   // const handleAdd = () => {\r\n   //    setCategories([...categories, \"Hunter x Hunter\"]);\r\n   // }\r\n\r\n   return (\r\n      <div>\r\n         <AppBar position=\"fixed\">\r\n            <Toolbar>\r\n               <Typography variant=\"h6\" className={classes.title}>\r\n                  Gift Expert App\r\n               </Typography>\r\n               <Button color=\"inherit\">Login</Button>\r\n            </Toolbar>\r\n         </AppBar>\r\n\r\n         <AddCategory setCategories={setCategories} />\r\n\r\n         {\r\n            categories.map(categorie => <GifGrid key={categorie} category={categorie} />)\r\n         }\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GiftExpertApp } from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals \n"],"sourceRoot":""}